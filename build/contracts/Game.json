{
  "contractName": "Game",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "remover",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "setIsPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftAddress",
          "type": "address"
        }
      ],
      "name": "setNftAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newPaused\",\"type\":\"bool\"}],\"name\":\"setIsPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftAddress\",\"type\":\"address\"}],\"name\":\"setNftAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Game.sol\":\"Game\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"@uniswap/v2-periphery/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xb3d2266dd8836a3aa0cfc8ebaf846180c7c0e0aafa87f6d780e33f3aa800efb3\",\"urls\":[\"bzz-raw://d91a961f072ba7eab75807725a2e442105f5df5f75be99a3dcf4f6dc6e8597f2\",\"dweb:/ipfs/QmXwSNpcfMqakqYTZ3JFd3EN1ejsLjjTtUKgFNQrLG7Qko\"]},\"@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x5eb7d416d413eb6aa0b30d763a96576dbe6e00ee57a4a644d4748bad6f502f6a\",\"urls\":[\"bzz-raw://9c85372360bb8472079a4c20365f916a62f6aacd4d55515d5a027358335fb655\",\"dweb:/ipfs/QmeE1UtiM7Z73XX8xVok4hATGztoZYMZX2azsDC9QHqUyz\"]},\"project:/contracts/Game.sol\":{\"keccak256\":\"0x5ff31d61c4df63b68fd7cab1c4c4c7945e2844f0b005c3f9292e68303ec9a2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd52c09e42ded8934fbf2e0472bdf93f8ce12ab4f13d14f95fc957514f6d91a\",\"dweb:/ipfs/QmbfrL4UszN9n9icmbdie3yQQRrpP1BepSS9XwDCXboKnQ\"]},\"project:/contracts/NFT.sol\":{\"keccak256\":\"0x722b86d464cd9ebb53c63dae605c766801f45f6b9b77156661f2975033d8d1b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f4b212dc9efd3a367a6b999b7f7334262ec8a4e5174e98765002e48ec54a12b\",\"dweb:/ipfs/QmexeWHMKX7XoTH6scdyK4Fcv1hV5y1LSA6M36upHzJVHo\"]},\"project:/contracts/Owners.sol\":{\"keccak256\":\"0x73880072bd223358ad6d7e18ebf31ed72a11da05c56bb226a6a206abd8cfd5f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://652c2f936cfad1fdc01f34ef609da44826ac0b5212fdf0c63d2fd1b6b591a9b4\",\"dweb:/ipfs/QmUysGAREpimd9Db3sMDwHR1k86aouBwwh7Hd5D7URZxci\"]},\"project:/contracts/PauseOwners.sol\":{\"keccak256\":\"0xcfdfe2c6b3947c7b3b21735dc202af1611c0e33aa324fddb09ac4f082a6fa9e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ddb17061664ad94cd3216daa81b230c981796c6606e16a39e3466b37e63461b\",\"dweb:/ipfs/QmPdnMAJctZ1U8FUsNpdTgfbSLPyL8ZbwHhY1LcUHFPs4n\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0x8b699d2cfd1b59945eee38e5d6d46b6cce0374cf99145dbc8d1eabd6063d5974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8670ff4ab1a8a4405e320d97598921b77f620008bb5051041d0f169e8044006f\",\"dweb:/ipfs/QmWTWQPjcdYWtP476xVd5RYpAo93hJ2qdHoC13QfF1JVh4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b503361006d5760405162461bcd60e51b815260206004820152602260248201527f43616e277420696e697469616c697a652077697468207a65726f206164647265604482015261737360f01b606482015260840160405180910390fd5b336000818152602081905260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055610718806100d56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806326a4e8d21161005b57806326a4e8d2146100bd5780632f54bf6e146100d05780637065cb4814610111578063a0e67e2b1461012457600080fd5b80630b102d1a14610082578063173825d914610097578063240976bf146100aa575b600080fd5b610095610090366004610587565b610139565b005b6100956100a5366004610587565b61019e565b6100956100b83660046105b7565b6103c4565b6100956100cb366004610587565b61040b565b6100fc6100de366004610587565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009561011f366004610587565b610461565b61012c610525565b60405161010891906105d9565b3360009081526020819052604090205460ff1615156001146101765760405162461bcd60e51b815260040161016d90610626565b60405180910390fd5b600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3360009081526020819052604090205460ff1615156001146101d25760405162461bcd60e51b815260040161016d90610626565b6001600160a01b03811660009081526020819052604090205460ff16151560011461023f5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206f776e6572000000000000000000604482015260640161016d565b60005b6001548110156103c057816001600160a01b03166001828154811061026957610269610656565b6000918252602090912001546001600160a01b031614156103ae576001600160a01b0382166000908152602081905260409020805460ff19169055805b600180546102b49190610682565b81101561033e5760016102c78382610699565b815481106102d7576102d7610656565b600091825260209091200154600180546001600160a01b03909216918490811061030357610303610656565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580610336816106b1565b9150506102a6565b506001805480610350576103506106cc565b600082815260208120820160001990810180546001600160a01b031916905590910190915560405142916001600160a01b0385169133917fecc5dd9888b87e7ed252d66b9c086ab819de6c8f8b96c8e5458e105bacfbb02791a45050565b806103b8816106b1565b915050610242565b5050565b3360009081526020819052604090205460ff1615156001146103f85760405162461bcd60e51b815260040161016d90610626565b6002805460ff1916911515919091179055565b3360009081526020819052604090205460ff16151560011461043f5760405162461bcd60e51b815260040161016d90610626565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526020819052604090205460ff1615156001146104955760405162461bcd60e51b815260040161016d90610626565b6001600160a01b038116600081815260208190526040808220805460ff19166001908117909155805480820182559083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916841790555142929133917fa0b18fca933618876351ba2ef88bf4505c184d3e55064bec0d7fe236dd706d849190a450565b6060600180548060200260200160405190810160405280929190818152602001828054801561057d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161055f575b5050505050905090565b60006020828403121561059957600080fd5b81356001600160a01b03811681146105b057600080fd5b9392505050565b6000602082840312156105c957600080fd5b813580151581146105b057600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561061a5783516001600160a01b0316835292840192918401916001016105f5565b50909695505050505050565b60208082526016908201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156106945761069461066c565b500390565b600082198211156106ac576106ac61066c565b500190565b60006000198214156106c5576106c561066c565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b787c4c1e1eee27f050c5173123124f080b3eeaf7ae195c4ecbc3349d2bb25d564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806326a4e8d21161005b57806326a4e8d2146100bd5780632f54bf6e146100d05780637065cb4814610111578063a0e67e2b1461012457600080fd5b80630b102d1a14610082578063173825d914610097578063240976bf146100aa575b600080fd5b610095610090366004610587565b610139565b005b6100956100a5366004610587565b61019e565b6100956100b83660046105b7565b6103c4565b6100956100cb366004610587565b61040b565b6100fc6100de366004610587565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009561011f366004610587565b610461565b61012c610525565b60405161010891906105d9565b3360009081526020819052604090205460ff1615156001146101765760405162461bcd60e51b815260040161016d90610626565b60405180910390fd5b600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3360009081526020819052604090205460ff1615156001146101d25760405162461bcd60e51b815260040161016d90610626565b6001600160a01b03811660009081526020819052604090205460ff16151560011461023f5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206f776e6572000000000000000000604482015260640161016d565b60005b6001548110156103c057816001600160a01b03166001828154811061026957610269610656565b6000918252602090912001546001600160a01b031614156103ae576001600160a01b0382166000908152602081905260409020805460ff19169055805b600180546102b49190610682565b81101561033e5760016102c78382610699565b815481106102d7576102d7610656565b600091825260209091200154600180546001600160a01b03909216918490811061030357610303610656565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580610336816106b1565b9150506102a6565b506001805480610350576103506106cc565b600082815260208120820160001990810180546001600160a01b031916905590910190915560405142916001600160a01b0385169133917fecc5dd9888b87e7ed252d66b9c086ab819de6c8f8b96c8e5458e105bacfbb02791a45050565b806103b8816106b1565b915050610242565b5050565b3360009081526020819052604090205460ff1615156001146103f85760405162461bcd60e51b815260040161016d90610626565b6002805460ff1916911515919091179055565b3360009081526020819052604090205460ff16151560011461043f5760405162461bcd60e51b815260040161016d90610626565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526020819052604090205460ff1615156001146104955760405162461bcd60e51b815260040161016d90610626565b6001600160a01b038116600081815260208190526040808220805460ff19166001908117909155805480820182559083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916841790555142929133917fa0b18fca933618876351ba2ef88bf4505c184d3e55064bec0d7fe236dd706d849190a450565b6060600180548060200260200160405190810160405280929190818152602001828054801561057d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161055f575b5050505050905090565b60006020828403121561059957600080fd5b81356001600160a01b03811681146105b057600080fd5b9392505050565b6000602082840312156105c957600080fd5b813580151581146105b057600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561061a5783516001600160a01b0316835292840192918401916001016105f5565b50909695505050505050565b60208082526016908201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156106945761069461066c565b500390565b600082198211156106ac576106ac61066c565b500190565b60006000198214156106c5576106c561066c565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b787c4c1e1eee27f050c5173123124f080b3eeaf7ae195c4ecbc3349d2bb25d564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:414:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:224:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:27",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:27"
                      },
                      {
                        "hexValue": "43616e277420696e697469616c697a652077697468207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:27",
                        "type": "",
                        "value": "Can't initialize with zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:27"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:4:27",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:32:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:32:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "379:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "391:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "402:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "387:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "379:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3bce1c407894fa64ce11d1e16cc3207df3a5671cb96c36110d9b2f681015c1a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:27",
                "type": ""
              }
            ],
            "src": "14:398:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_3bce1c407894fa64ce11d1e16cc3207df3a5671cb96c36110d9b2f681015c1a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Can't initialize with zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2937:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:27",
                "type": ""
              }
            ],
            "src": "14:286:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:206:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "427:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "382:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "443:36:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "447:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "532:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "541:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "544:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "534:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "534:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "534:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "501:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "515:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "508:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "508:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "498:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "498:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "491:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "488:60:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "557:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "567:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "338:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "349:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "361:6:27",
                "type": ""
              }
            ],
            "src": "305:273:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "678:92:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "688:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "700:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "711:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "696:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "696:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "688:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "730:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "755:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "748:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "748:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "741:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "741:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:41:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "723:41:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "647:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "658:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "669:4:27",
                "type": ""
              }
            ],
            "src": "583:187:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "926:507:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "936:12:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "946:2:27",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "940:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "957:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "986:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "971:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:18:27"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "961:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1005:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1016:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "998:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "998:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1028:17:27",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "1039:6:27"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1032:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1054:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1074:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1068:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1058:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1097:6:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1090:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1090:22:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1132:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1143:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1128:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1155:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1173:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1181:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1169:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:15:27"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1159:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1193:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1202:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1197:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1261:146:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1282:3:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1297:6:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1291:5:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1291:13:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1314:3:27",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1319:1:27",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1310:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1310:11:27"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1323:1:27",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1306:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1306:19:27"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1287:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1287:39:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:52:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:52:27"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1340:19:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1351:3:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1356:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1347:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1347:12:27"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1340:3:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1372:25:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1386:6:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1394:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1382:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1382:15:27"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1372:6:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1223:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1226:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1220:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1234:18:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1236:14:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1245:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1248:1:27",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1241:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:9:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1236:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1216:3:27",
                    "statements": []
                  },
                  "src": "1212:195:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1416:11:27",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1424:3:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1416:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "895:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "906:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "917:4:27",
                "type": ""
              }
            ],
            "src": "775:658:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1612:172:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1629:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1622:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1622:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1622:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1674:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1659:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1659:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:2:27",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1652:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1652:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1652:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:18:27"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616e206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1718:24:27",
                        "type": "",
                        "value": "Caller is not an owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1691:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1752:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1764:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1775:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1760:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1752:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fba574a628f13337c8d554e12acf25c09c56b020b31ccfaf084049163a70a41b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1589:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1603:4:27",
                "type": ""
              }
            ],
            "src": "1438:346:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1963:173:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1980:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1991:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1973:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1973:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2014:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2025:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2010:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2030:2:27",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2003:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2003:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2003:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2053:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2064:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:18:27"
                      },
                      {
                        "hexValue": "41646472657373206973206e6f7420616e206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2069:25:27",
                        "type": "",
                        "value": "Address is not an owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:53:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2104:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2116:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2127:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2112:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2104:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_538593ea93687d235ae32a6b6b2bcda5d71efbe1a04789ce864b7aa1614f8e68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1940:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1954:4:27",
                "type": ""
              }
            ],
            "src": "1789:347:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2173:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2190:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2197:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2202:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2193:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2193:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2183:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2183:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2183:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2230:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:4:27",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2223:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2223:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2254:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2257:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:15:27"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "2141:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2322:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2329:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2334:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2325:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2325:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2315:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2315:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2362:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2355:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2355:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2355:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2386:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2379:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2379:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2273:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2454:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2476:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2478:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2478:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2478:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2470:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2473:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2467:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:8:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2464:34:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2507:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2519:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2522:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2507:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2436:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2439:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2445:4:27",
                "type": ""
              }
            ],
            "src": "2405:125:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2583:80:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2610:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2612:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2612:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2612:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2599:1:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2606:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2602:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2602:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2596:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2593:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2641:16:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2652:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2655:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2648:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2648:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2641:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2566:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2569:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2575:3:27",
                "type": ""
              }
            ],
            "src": "2535:128:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2715:88:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2746:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2748:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2748:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2748:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2731:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2742:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2738:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2738:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2728:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:17:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2725:43:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2777:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2788:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2795:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2784:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2784:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2777:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2697:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2707:3:27",
                "type": ""
              }
            ],
            "src": "2668:135:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2840:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2857:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2864:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2869:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2850:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2850:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2850:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2897:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2900:4:27",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2890:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2890:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2921:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2924:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2914:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2914:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2914:15:27"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "2808:127:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_fba574a628f13337c8d554e12acf25c09c56b020b31ccfaf084049163a70a41b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not an owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_538593ea93687d235ae32a6b6b2bcda5d71efbe1a04789ce864b7aa1614f8e68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Address is not an owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "138:293:21:-:0;;;;;;;;;;;;-1:-1:-1;581:10:24;573:71;;;;-1:-1:-1;;;573:71:24;;216:2:27;573:71:24;;;198:21:27;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:27;;;338:32;387:19;;573:71:24;;;;;;;;658:10;648:9;:21;;;;;;;;;;:28;;-1:-1:-1;;648:28:24;672:4;648:28;;;;;;680:27;;;;;;;;;;;;;-1:-1:-1;;;;;;680:27:24;;;;;;138:293:21;;;;;;",
  "deployedSourceMap": "138:293:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:98;;;;;;:::i;:::-;;:::i;:::-;;984:444:24;;;;;;:::i;:::-;;:::i;262:85:25:-;;;;;;:::i;:::-;;:::i;312:117:21:-;;;;;;:::i;:::-;;:::i;372:90:24:-;;;;;;:::i;:::-;-1:-1:-1;;;;;442:16:24;425:4;442:16;;;;;;;;;;;;;;372:90;;;;748:14:27;;741:22;723:41;;711:2;696:18;372:90:24;;;;;;;;816:165;;;;;;:::i;:::-;;:::i;465:87::-;;;:::i;:::-;;;;;;;:::i;211:98:21:-;758:10:24;748:9;:21;;;;;;;;;;;;;:29;;:21;:29;740:64;;;;-1:-1:-1;;;740:64:24;;;;;;;:::i;:::-;;;;;;;;;281:3:21::1;:24:::0;;-1:-1:-1;;;;;281:24:21;;::::1;;;-1:-1:-1::0;;;;;;281:24:21;;::::1;::::0;;;::::1;::::0;;211:98::o;984:444:24:-;758:10;748:9;:21;;;;;;;;;;;;;:29;;:21;:29;740:64;;;;-1:-1:-1;;;740:64:24;;;;;;;:::i;:::-;-1:-1:-1;;;;;1052:16:24;::::1;:9;:16:::0;;;::::1;::::0;;;;;;;::::1;;:24;;:16:::0;:24:::1;1044:60;;;::::0;-1:-1:-1;;;1044:60:24;;1991:2:27;1044:60:24::1;::::0;::::1;1973:21:27::0;2030:2;2010:18;;;2003:30;2069:25;2049:18;;;2042:53;2112:18;;1044:60:24::1;1789:347:27::0;1044:60:24::1;1113:9;1108:317;1132:10;:17:::0;1128:21;::::1;1108:317;;;1182:5;-1:-1:-1::0;;;;;1165:22:24::1;:10;1176:1;1165:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;1165:13:24::1;:22;1161:260;;;-1:-1:-1::0;;;;;1195:16:24;::::1;1214:5;1195:16:::0;;;::::1;::::0;;;;;;:24;;-1:-1:-1;;1195:24:24::1;::::0;;1242:1;1225:99:::1;1269:1;1249:17:::0;;:21:::1;::::0;1269:1;1249:21:::1;:::i;:::-;1245:1;:25;1225:99;;;1300:10;1311:5;:1:::0;1300:10;1311:5:::1;:::i;:::-;1300:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;1284:13;;-1:-1:-1;;;;;1300:17:24;;::::1;::::0;1295:1;;1284:13;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:33:::0;;-1:-1:-1;;;;;;1284:33:24::1;-1:-1:-1::0;;;;;1284:33:24;;;::::1;::::0;;;::::1;::::0;;1272:3;::::1;::::0;::::1;:::i;:::-;;;;1225:99;;;;1329:10;:16;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1329:16:24;;;;;-1:-1:-1;;;;;;1329:16:24::1;::::0;;;;;;;;1356:48:::1;::::0;1388:15:::1;::::0;-1:-1:-1;;;;;1356:48:24;::::1;::::0;1369:10:::1;::::0;1356:48:::1;::::0;::::1;1108:317;984:444:::0;:::o;1161:260::-:1;1151:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1108:317;;;;984:444:::0;:::o;262:85:25:-;758:10:24;748:9;:21;;;;;;;;;;;;;:29;;:21;:29;740:64;;;;-1:-1:-1;;;740:64:24;;;;;;;:::i;:::-;323:8:25::1;:20:::0;;-1:-1:-1;;323:20:25::1;::::0;::::1;;::::0;;;::::1;::::0;;262:85::o;312:117:21:-;758:10:24;748:9;:21;;;;;;;;;;;;;:29;;:21;:29;740:64;;;;-1:-1:-1;;;740:64:24;;;;;;;:::i;:::-;386:5:21::1;:39:::0;;-1:-1:-1;;;;;;386:39:21::1;-1:-1:-1::0;;;;;386:39:21;;;::::1;::::0;;;::::1;::::0;;312:117::o;816:165:24:-;758:10;748:9;:21;;;;;;;;;;;;;:29;;:21;:29;740:64;;;;-1:-1:-1;;;740:64:24;;;;;;;:::i;:::-;-1:-1:-1;;;;;873:16:24;::::1;:9;:16:::0;;;::::1;::::0;;;;;;;:23;;-1:-1:-1;;873:23:24::1;892:4;873:23:::0;;::::1;::::0;;;900:22;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;900:22:24::1;::::0;::::1;::::0;;931:46;961:15:::1;::::0;873:16;942:10:::1;::::0;931:46:::1;::::0;873:9;931:46:::1;816:165:::0;:::o;465:87::-;509:16;538:10;531:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:17:24;;;;;;;;;;;;;;;;;;;;;;;465:87;:::o;14:286:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:27;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:27:o;305:273::-;361:6;414:2;402:9;393:7;389:23;385:32;382:52;;;430:1;427;420:12;382:52;469:9;456:23;522:5;515:13;508:21;501:5;498:32;488:60;;544:1;541;534:12;775:658;946:2;998:21;;;1068:13;;971:18;;;1090:22;;;917:4;;946:2;1169:15;;;;1143:2;1128:18;;;917:4;1212:195;1226:6;1223:1;1220:13;1212:195;;;1291:13;;-1:-1:-1;;;;;1287:39:27;1275:52;;1382:15;;;;1347:12;;;;1323:1;1241:9;1212:195;;;-1:-1:-1;1424:3:27;;775:658;-1:-1:-1;;;;;;775:658:27:o;1438:346::-;1640:2;1622:21;;;1679:2;1659:18;;;1652:30;-1:-1:-1;;;1713:2:27;1698:18;;1691:52;1775:2;1760:18;;1438:346::o;2141:127::-;2202:10;2197:3;2193:20;2190:1;2183:31;2233:4;2230:1;2223:15;2257:4;2254:1;2247:15;2273:127;2334:10;2329:3;2325:20;2322:1;2315:31;2365:4;2362:1;2355:15;2389:4;2386:1;2379:15;2405:125;2445:4;2473:1;2470;2467:8;2464:34;;;2478:18;;:::i;:::-;-1:-1:-1;2515:9:27;;2405:125::o;2535:128::-;2575:3;2606:1;2602:6;2599:1;2596:13;2593:39;;;2612:18;;:::i;:::-;-1:-1:-1;2648:9:27;;2535:128::o;2668:135::-;2707:3;-1:-1:-1;;2728:17:27;;2725:43;;;2748:18;;:::i;:::-;-1:-1:-1;2795:1:27;2784:13;;2668:135::o;2808:127::-;2869:10;2864:3;2860:20;2857:1;2850:31;2900:4;2897:1;2890:15;2924:4;2921:1;2914:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./PauseOwners.sol\";\nimport \"./NFT.sol\";\nimport \"./Token.sol\";\n\ncontract Game is PauseOwners {\n\tNFT private nft;\n\tToken private token;\n\n\tfunction setNftAddress(address newNftAddress) external onlyOwners {\n\t\tnft = NFT(newNftAddress);\n\t}\n\n\tfunction setTokenAddress(address newTokenAddress) external onlyOwners {\n\t\ttoken = Token(payable(newTokenAddress));\n\t}\n}\n",
  "sourcePath": "C:\\Users\\sants\\Desktop\\slimekeeper\\slimekeeper_contracts\\contracts\\Game.sol",
  "ast": {
    "absolutePath": "project:/contracts/Game.sol",
    "exportedSymbols": {
      "Address": [
        2434
      ],
      "Context": [
        2456
      ],
      "Counters": [
        2530
      ],
      "ERC165": [
        2757
      ],
      "ERC20": [
        545
      ],
      "ERC721": [
        1479
      ],
      "ERC721Enumerable": [
        1951
      ],
      "ERC721URIStorage": [
        2079
      ],
      "Game": [
        4002
      ],
      "IERC165": [
        2769
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "IERC721": [
        1595
      ],
      "IERC721Enumerable": [
        2110
      ],
      "IERC721Metadata": [
        2137
      ],
      "IERC721Receiver": [
        1613
      ],
      "IUniswapV2Pair": [
        3011
      ],
      "IUniswapV2Router01": [
        3319
      ],
      "IUniswapV2Router02": [
        3407
      ],
      "NFT": [
        4835
      ],
      "Owners": [
        5035
      ],
      "PauseOwners": [
        5072
      ],
      "SafeMath": [
        3482
      ],
      "Strings": [
        2733
      ],
      "Token": [
        5957
      ],
      "UniswapV2Library": [
        3957
      ]
    },
    "id": 4003,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3959,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:21"
      },
      {
        "absolutePath": "project:/contracts/PauseOwners.sol",
        "file": "./PauseOwners.sol",
        "id": 3960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 5073,
        "src": "67:27:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFT.sol",
        "file": "./NFT.sol",
        "id": 3961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 4836,
        "src": "95:19:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 3962,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 5958,
        "src": "115:21:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3963,
              "name": "PauseOwners",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5072,
              "src": "155:11:21"
            },
            "id": 3964,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:21"
          }
        ],
        "canonicalName": "Game",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4002,
        "linearizedBaseContracts": [
          4002,
          5072,
          5035
        ],
        "name": "Game",
        "nameLocation": "147:4:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3967,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "182:3:21",
            "nodeType": "VariableDeclaration",
            "scope": 4002,
            "src": "170:15:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$4835",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 3966,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3965,
                "name": "NFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4835,
                "src": "170:3:21"
              },
              "referencedDeclaration": 4835,
              "src": "170:3:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$4835",
                "typeString": "contract NFT"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3970,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "202:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 4002,
            "src": "188:19:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$5957",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 3969,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3968,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5957,
                "src": "188:5:21"
              },
              "referencedDeclaration": 5957,
              "src": "188:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$5957",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3983,
              "nodeType": "Block",
              "src": "277:32:21",
              "statements": [
                {
                  "expression": {
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3977,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3967,
                      "src": "281:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$4835",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3979,
                          "name": "newNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3972,
                          "src": "291:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3978,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4835,
                        "src": "287:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$4835_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 3980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "287:18:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$4835",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "281:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$4835",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 3982,
                  "nodeType": "ExpressionStatement",
                  "src": "281:24:21"
                }
              ]
            },
            "functionSelector": "0b102d1a",
            "id": 3984,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3974,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4924,
                  "src": "266:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "266:10:21"
              }
            ],
            "name": "setNftAddress",
            "nameLocation": "220:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3972,
                  "mutability": "mutable",
                  "name": "newNftAddress",
                  "nameLocation": "242:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "234:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:23:21"
            },
            "returnParameters": {
              "id": 3976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:21"
            },
            "scope": 4002,
            "src": "211:98:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4000,
              "nodeType": "Block",
              "src": "382:47:21",
              "statements": [
                {
                  "expression": {
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3991,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3970,
                      "src": "386:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$5957",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3995,
                              "name": "newTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3986,
                              "src": "408:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "400:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "400:8:21",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "400:24:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3992,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5957,
                        "src": "394:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$5957_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 3997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:31:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$5957",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "386:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$5957",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 3999,
                  "nodeType": "ExpressionStatement",
                  "src": "386:39:21"
                }
              ]
            },
            "functionSelector": "26a4e8d2",
            "id": 4001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3989,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3988,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4924,
                  "src": "371:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "371:10:21"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "321:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3986,
                  "mutability": "mutable",
                  "name": "newTokenAddress",
                  "nameLocation": "345:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "337:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:21"
            },
            "returnParameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:21"
            },
            "scope": 4002,
            "src": "312:117:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4003,
        "src": "138:293:21",
        "usedErrors": []
      }
    ],
    "src": "33:399:21"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Game.sol",
    "exportedSymbols": {
      "Address": [
        2434
      ],
      "Context": [
        2456
      ],
      "Counters": [
        2530
      ],
      "ERC165": [
        2757
      ],
      "ERC20": [
        545
      ],
      "ERC721": [
        1479
      ],
      "ERC721Enumerable": [
        1951
      ],
      "ERC721URIStorage": [
        2079
      ],
      "Game": [
        4002
      ],
      "IERC165": [
        2769
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "IERC721": [
        1595
      ],
      "IERC721Enumerable": [
        2110
      ],
      "IERC721Metadata": [
        2137
      ],
      "IERC721Receiver": [
        1613
      ],
      "IUniswapV2Pair": [
        3011
      ],
      "IUniswapV2Router01": [
        3319
      ],
      "IUniswapV2Router02": [
        3407
      ],
      "NFT": [
        4835
      ],
      "Owners": [
        5035
      ],
      "PauseOwners": [
        5072
      ],
      "SafeMath": [
        3482
      ],
      "Strings": [
        2733
      ],
      "Token": [
        5957
      ],
      "UniswapV2Library": [
        3957
      ]
    },
    "id": 4003,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3959,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:21"
      },
      {
        "absolutePath": "project:/contracts/PauseOwners.sol",
        "file": "./PauseOwners.sol",
        "id": 3960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 5073,
        "src": "67:27:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFT.sol",
        "file": "./NFT.sol",
        "id": 3961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 4836,
        "src": "95:19:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 3962,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4003,
        "sourceUnit": 5958,
        "src": "115:21:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3963,
              "name": "PauseOwners",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5072,
              "src": "155:11:21"
            },
            "id": 3964,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:21"
          }
        ],
        "canonicalName": "Game",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4002,
        "linearizedBaseContracts": [
          4002,
          5072,
          5035
        ],
        "name": "Game",
        "nameLocation": "147:4:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3967,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "182:3:21",
            "nodeType": "VariableDeclaration",
            "scope": 4002,
            "src": "170:15:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$4835",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 3966,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3965,
                "name": "NFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4835,
                "src": "170:3:21"
              },
              "referencedDeclaration": 4835,
              "src": "170:3:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$4835",
                "typeString": "contract NFT"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3970,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "202:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 4002,
            "src": "188:19:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$5957",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 3969,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3968,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5957,
                "src": "188:5:21"
              },
              "referencedDeclaration": 5957,
              "src": "188:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$5957",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3983,
              "nodeType": "Block",
              "src": "277:32:21",
              "statements": [
                {
                  "expression": {
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3977,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3967,
                      "src": "281:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$4835",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3979,
                          "name": "newNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3972,
                          "src": "291:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3978,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4835,
                        "src": "287:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$4835_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 3980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "287:18:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$4835",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "281:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$4835",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 3982,
                  "nodeType": "ExpressionStatement",
                  "src": "281:24:21"
                }
              ]
            },
            "functionSelector": "0b102d1a",
            "id": 3984,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3974,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4924,
                  "src": "266:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "266:10:21"
              }
            ],
            "name": "setNftAddress",
            "nameLocation": "220:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3972,
                  "mutability": "mutable",
                  "name": "newNftAddress",
                  "nameLocation": "242:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "234:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:23:21"
            },
            "returnParameters": {
              "id": 3976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:21"
            },
            "scope": 4002,
            "src": "211:98:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4000,
              "nodeType": "Block",
              "src": "382:47:21",
              "statements": [
                {
                  "expression": {
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3991,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3970,
                      "src": "386:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$5957",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3995,
                              "name": "newTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3986,
                              "src": "408:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "400:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "400:8:21",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "400:24:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3992,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5957,
                        "src": "394:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$5957_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 3997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:31:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$5957",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "386:39:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$5957",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 3999,
                  "nodeType": "ExpressionStatement",
                  "src": "386:39:21"
                }
              ]
            },
            "functionSelector": "26a4e8d2",
            "id": 4001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3989,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3988,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4924,
                  "src": "371:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "371:10:21"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "321:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3986,
                  "mutability": "mutable",
                  "name": "newTokenAddress",
                  "nameLocation": "345:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4001,
                  "src": "337:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:21"
            },
            "returnParameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:21"
            },
            "scope": 4002,
            "src": "312:117:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4003,
        "src": "138:293:21",
        "usedErrors": []
      }
    ],
    "src": "33:399:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1D51128f047274d610525C0078A4a97FCe1e3C66",
      "transactionHash": "0x3d46787689eb8688b63f9c21baa9337741b3a6d2a9c9411ccbf9f141f5b46870"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-15T23:49:17.786Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}