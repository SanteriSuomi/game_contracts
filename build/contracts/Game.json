{
  "contractName": "Game",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "adder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "remover",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPaused_",
          "type": "bool"
        }
      ],
      "name": "setIsPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftAddress",
          "type": "address"
        }
      ],
      "name": "setNftAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remover\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused_\",\"type\":\"bool\"}],\"name\":\"setIsPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftAddress\",\"type\":\"address\"}],\"name\":\"setNftAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Game.sol\":\"Game\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"@uniswap/v2-periphery/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xb3d2266dd8836a3aa0cfc8ebaf846180c7c0e0aafa87f6d780e33f3aa800efb3\",\"urls\":[\"bzz-raw://d91a961f072ba7eab75807725a2e442105f5df5f75be99a3dcf4f6dc6e8597f2\",\"dweb:/ipfs/QmXwSNpcfMqakqYTZ3JFd3EN1ejsLjjTtUKgFNQrLG7Qko\"]},\"@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x5eb7d416d413eb6aa0b30d763a96576dbe6e00ee57a4a644d4748bad6f502f6a\",\"urls\":[\"bzz-raw://9c85372360bb8472079a4c20365f916a62f6aacd4d55515d5a027358335fb655\",\"dweb:/ipfs/QmeE1UtiM7Z73XX8xVok4hATGztoZYMZX2azsDC9QHqUyz\"]},\"project:/contracts/Game.sol\":{\"keccak256\":\"0x5ff31d61c4df63b68fd7cab1c4c4c7945e2844f0b005c3f9292e68303ec9a2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fd52c09e42ded8934fbf2e0472bdf93f8ce12ab4f13d14f95fc957514f6d91a\",\"dweb:/ipfs/QmbfrL4UszN9n9icmbdie3yQQRrpP1BepSS9XwDCXboKnQ\"]},\"project:/contracts/NFT.sol\":{\"keccak256\":\"0xcb14b6d4a0b9c4f6cdfe5b9a62593cd6f550bf862a90d973340f22d4a6a49b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7ee2064a7c774f42193f2855622e204315e03a5f8c1a9759b2ac602bef07454\",\"dweb:/ipfs/QmSptgWoEju3UgfSDm4eacgGpRZaV62VBnh4MQpwf6Guw7\"]},\"project:/contracts/Owners.sol\":{\"keccak256\":\"0xc29bacba7ad301c9afca10082812da75c44d6b45132f95f0631c0b495a73a741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4723ecbc5a5bdff6551b6273420cbadd7661a164da86a1f329bdc7dc7c6d0b28\",\"dweb:/ipfs/QmZ11t8RHWBdaJ6iRs92rpiEwPPUGFdtPRB7HZCJ5W7F2n\"]},\"project:/contracts/PauseOwners.sol\":{\"keccak256\":\"0xdb8ce052aaad07ee970db1e9c02f19e7d63f3e805c96ffb506426384273c73bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec4b10314cb4925a5c5417679e61a6b79f56d1d1c180088ae914f03cdeb5da58\",\"dweb:/ipfs/QmRUV7ujbbKokiUfzUUxv1iqLkEjSjm67CM9uWpaqvc6ag\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0xbf5630ac4d78bf06df900a3196c1123c560e13f4351e4992a27d76b7b2fe4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://886879710d5a0c7bd2ac524c7598e806408498e72335dc2965f21bbcb23bef32\",\"dweb:/ipfs/Qmf7mtZWn8JoF1uPvbL7eQP44TgtdfEWz8zUxgtahcPoWz\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b503361006d5760405162461bcd60e51b815260206004820152602260248201527f43616e277420696e697469616c697a652077697468207a65726f206164647265604482015261737360f01b606482015260840160405180910390fd5b60008054610100600160a81b0319163361010081029190911782558082526001602081905260408320805460ff1916821790556002805491820181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b0319169091179055610922806100f06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637065cb48116100665780637065cb4814610132578063715018a614610145578063a0e67e2b1461014d578063b187bd2614610162578063d232c2201461016f57600080fd5b80630b102d1a146100a3578063173825d9146100b8578063240976bf146100cb57806326a4e8d2146100de5780632f54bf6e146100f1575b600080fd5b6100b66100b1366004610764565b61017c565b005b6100b66100c6366004610764565b6101ff565b6100b66100d9366004610794565b6104a0565b6100b66100ec366004610764565b610505565b61011d6100ff366004610764565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100b6610140366004610764565b610579565b6100b661065c565b610155610702565b60405161012991906107b6565b60035461011d9060ff1681565b60005461011d9060ff1681565b60005460ff16156101a85760405162461bcd60e51b815260040161019f90610803565b60405180910390fd5b3360009081526001602052604090205460ff166101d75760405162461bcd60e51b815260040161019f90610830565b600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60005460ff16156102225760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166102515760405162461bcd60e51b815260040161019f90610830565b6001600160a01b03811660009081526001602052604090205460ff166102b95760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206f776e6572000000000000000000604482015260640161019f565b60005461010090046001600160a01b03163314156103195760405162461bcd60e51b815260206004820152601d60248201527f4d6173746572206f776e65722063616e27742062652072656d6f766564000000604482015260640161019f565b60005b60025481101561049c57816001600160a01b03166002828154811061034357610343610860565b6000918252602090912001546001600160a01b0316141561048a576001600160a01b0382166000908152600160205260409020805460ff19169055805b60025461038f9060019061088c565b81101561041a5760026103a38360016108a3565b815481106103b3576103b3610860565b600091825260209091200154600280546001600160a01b0390921691849081106103df576103df610860565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580610412816108bb565b915050610380565b50600280548061042c5761042c6108d6565b600082815260208120820160001990810180546001600160a01b031916905590910190915560405142916001600160a01b0385169133917fecc5dd9888b87e7ed252d66b9c086ab819de6c8f8b96c8e5458e105bacfbb02791a45050565b80610494816108bb565b91505061031c565b5050565b60005460ff16156104c35760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166104f25760405162461bcd60e51b815260040161019f90610830565b6003805460ff1916911515919091179055565b60005460ff16156105285760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166105575760405162461bcd60e51b815260040161019f90610830565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60005460ff161561059c5760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166105cb5760405162461bcd60e51b815260040161019f90610830565b6001600160a01b0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b031916841790555142929133917fa0b18fca933618876351ba2ef88bf4505c184d3e55064bec0d7fe236dd706d849190a450565b60005461010090046001600160a01b031633146106cc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206d6173746572206f776e65722063616e2072656e6f756e6365206f6044820152670776e6572736869760c41b606482015260840161019f565b6000805460ff191660011781556040517fd1f66c3d2bc1993a86be5e3d33709d98f0442381befcedd29f578b9b2506b1ce9190a1565b6060600280548060200260200160405190810160405280929190818152602001828054801561075a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161073c575b5050505050905090565b60006020828403121561077657600080fd5b81356001600160a01b038116811461078d57600080fd5b9392505050565b6000602082840312156107a657600080fd5b8135801515811461078d57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156107f75783516001600160a01b0316835292840192918401916001016107d2565b50909695505050505050565b60208082526013908201527213dddb995c9cda1a5c081c995b9bdd5b98d959606a1b604082015260600190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561089e5761089e610876565b500390565b600082198211156108b6576108b6610876565b500190565b60006000198214156108cf576108cf610876565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c86b6cc7c540a075c6997dab35f08a50d910adb1c23d31c155fbbb2ff331fab564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637065cb48116100665780637065cb4814610132578063715018a614610145578063a0e67e2b1461014d578063b187bd2614610162578063d232c2201461016f57600080fd5b80630b102d1a146100a3578063173825d9146100b8578063240976bf146100cb57806326a4e8d2146100de5780632f54bf6e146100f1575b600080fd5b6100b66100b1366004610764565b61017c565b005b6100b66100c6366004610764565b6101ff565b6100b66100d9366004610794565b6104a0565b6100b66100ec366004610764565b610505565b61011d6100ff366004610764565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100b6610140366004610764565b610579565b6100b661065c565b610155610702565b60405161012991906107b6565b60035461011d9060ff1681565b60005461011d9060ff1681565b60005460ff16156101a85760405162461bcd60e51b815260040161019f90610803565b60405180910390fd5b3360009081526001602052604090205460ff166101d75760405162461bcd60e51b815260040161019f90610830565b600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60005460ff16156102225760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166102515760405162461bcd60e51b815260040161019f90610830565b6001600160a01b03811660009081526001602052604090205460ff166102b95760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206f776e6572000000000000000000604482015260640161019f565b60005461010090046001600160a01b03163314156103195760405162461bcd60e51b815260206004820152601d60248201527f4d6173746572206f776e65722063616e27742062652072656d6f766564000000604482015260640161019f565b60005b60025481101561049c57816001600160a01b03166002828154811061034357610343610860565b6000918252602090912001546001600160a01b0316141561048a576001600160a01b0382166000908152600160205260409020805460ff19169055805b60025461038f9060019061088c565b81101561041a5760026103a38360016108a3565b815481106103b3576103b3610860565b600091825260209091200154600280546001600160a01b0390921691849081106103df576103df610860565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580610412816108bb565b915050610380565b50600280548061042c5761042c6108d6565b600082815260208120820160001990810180546001600160a01b031916905590910190915560405142916001600160a01b0385169133917fecc5dd9888b87e7ed252d66b9c086ab819de6c8f8b96c8e5458e105bacfbb02791a45050565b80610494816108bb565b91505061031c565b5050565b60005460ff16156104c35760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166104f25760405162461bcd60e51b815260040161019f90610830565b6003805460ff1916911515919091179055565b60005460ff16156105285760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166105575760405162461bcd60e51b815260040161019f90610830565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60005460ff161561059c5760405162461bcd60e51b815260040161019f90610803565b3360009081526001602052604090205460ff166105cb5760405162461bcd60e51b815260040161019f90610830565b6001600160a01b0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b031916841790555142929133917fa0b18fca933618876351ba2ef88bf4505c184d3e55064bec0d7fe236dd706d849190a450565b60005461010090046001600160a01b031633146106cc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206d6173746572206f776e65722063616e2072656e6f756e6365206f6044820152670776e6572736869760c41b606482015260840161019f565b6000805460ff191660011781556040517fd1f66c3d2bc1993a86be5e3d33709d98f0442381befcedd29f578b9b2506b1ce9190a1565b6060600280548060200260200160405190810160405280929190818152602001828054801561075a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161073c575b5050505050905090565b60006020828403121561077657600080fd5b81356001600160a01b038116811461078d57600080fd5b9392505050565b6000602082840312156107a657600080fd5b8135801515811461078d57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156107f75783516001600160a01b0316835292840192918401916001016107d2565b50909695505050505050565b60208082526013908201527213dddb995c9cda1a5c081c995b9bdd5b98d959606a1b604082015260600190565b60208082526016908201527521b0b63632b91034b9903737ba1030b71037bbb732b960511b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561089e5761089e610876565b500390565b600082198211156108b6576108b6610876565b500190565b60006000198214156108cf576108cf610876565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c86b6cc7c540a075c6997dab35f08a50d910adb1c23d31c155fbbb2ff331fab564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:414:28",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:28",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:224:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:28",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:28"
                      },
                      {
                        "hexValue": "43616e277420696e697469616c697a652077697468207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:28",
                        "type": "",
                        "value": "Can't initialize with zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:28"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:4:28",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:32:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:32:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "379:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "391:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "402:3:28",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "387:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:19:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "379:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3bce1c407894fa64ce11d1e16cc3207df3a5671cb96c36110d9b2f681015c1a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:28",
                "type": ""
              }
            ],
            "src": "14:398:28"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_3bce1c407894fa64ce11d1e16cc3207df3a5671cb96c36110d9b2f681015c1a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Can't initialize with zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 28,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4052:28",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:28",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:28"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:28"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:28",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:28",
                "type": ""
              }
            ],
            "src": "14:286:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:206:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "427:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "382:52:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "443:36:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:28"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "447:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "532:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "541:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "544:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "534:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "534:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "534:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "501:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:5:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "515:13:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "508:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "508:21:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "498:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "498:32:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "491:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:40:28"
                  },
                  "nodeType": "YulIf",
                  "src": "488:60:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "557:15:28",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "567:5:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "338:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "349:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "361:6:28",
                "type": ""
              }
            ],
            "src": "305:273:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "678:92:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "688:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "700:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "711:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "696:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "696:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "688:4:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "730:9:28"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "755:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "748:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "748:14:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "741:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "741:22:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "723:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:41:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "723:41:28"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "647:9:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "658:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "669:4:28",
                "type": ""
              }
            ],
            "src": "583:187:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "926:507:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "936:12:28",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "946:2:28",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "940:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "957:32:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:28"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "986:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "971:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:18:28"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "961:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1005:9:28"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1016:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "998:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "998:21:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1028:17:28",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "1039:6:28"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1032:3:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1054:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1074:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1068:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:13:28"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1058:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "1097:6:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1090:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:22:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1090:22:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:25:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1132:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1143:2:28",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1128:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:28"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1155:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1173:6:28"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1181:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1169:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:15:28"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1159:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1193:10:28",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1202:1:28",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1197:1:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1261:146:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1282:3:28"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1297:6:28"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1291:5:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1291:13:28"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1314:3:28",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1319:1:28",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1310:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1310:11:28"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1323:1:28",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1306:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1306:19:28"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1287:3:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1287:39:28"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:52:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:52:28"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1340:19:28",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1351:3:28"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1356:2:28"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1347:3:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1347:12:28"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1340:3:28"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1372:25:28",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1386:6:28"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1394:2:28"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1382:3:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1382:15:28"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1372:6:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1223:1:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1226:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1220:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:13:28"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1234:18:28",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1236:14:28",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1245:1:28"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1248:1:28",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1241:3:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:9:28"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1236:1:28"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1216:3:28",
                    "statements": []
                  },
                  "src": "1212:195:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1416:11:28",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1424:3:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1416:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "895:9:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "906:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "917:4:28",
                "type": ""
              }
            ],
            "src": "775:658:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1612:169:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1629:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1622:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1622:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1622:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1674:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1659:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1659:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:2:28",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1652:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1652:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1652:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:18:28"
                      },
                      {
                        "hexValue": "4f776e6572736869702072656e6f756e636564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1718:21:28",
                        "type": "",
                        "value": "Ownership renounced"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:49:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1691:49:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1749:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1761:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1772:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1757:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1749:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3279c59cf38cd2aa18997d7e259b0a569dcc09bb6c3af807880ccf7e9c7631bf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1589:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1603:4:28",
                "type": ""
              }
            ],
            "src": "1438:343:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1960:172:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1977:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1988:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2027:2:28",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2000:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2000:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:18:28"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616e206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2066:24:28",
                        "type": "",
                        "value": "Caller is not an owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:52:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2039:52:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2100:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2112:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2123:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2108:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2108:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2100:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fba574a628f13337c8d554e12acf25c09c56b020b31ccfaf084049163a70a41b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1937:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1951:4:28",
                "type": ""
              }
            ],
            "src": "1786:346:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2311:173:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2328:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2339:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2321:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2321:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2362:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2373:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2358:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2358:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2378:2:28",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2351:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2351:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2401:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2412:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2397:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2397:18:28"
                      },
                      {
                        "hexValue": "41646472657373206973206e6f7420616e206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2417:25:28",
                        "type": "",
                        "value": "Address is not an owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2390:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:53:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2390:53:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2452:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2464:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2475:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2452:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_538593ea93687d235ae32a6b6b2bcda5d71efbe1a04789ce864b7aa1614f8e68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2288:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2302:4:28",
                "type": ""
              }
            ],
            "src": "2137:347:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2663:179:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2680:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2691:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2673:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2673:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2714:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2725:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2710:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2710:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2730:2:28",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2703:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2703:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2753:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2764:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2749:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2749:18:28"
                      },
                      {
                        "hexValue": "4d6173746572206f776e65722063616e27742062652072656d6f766564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2769:31:28",
                        "type": "",
                        "value": "Master owner can't be removed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2742:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2742:59:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2742:59:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2810:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2822:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2833:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2818:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2818:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2810:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7540494e9cf0c4a57a87d1b135ca545fac1796f1b67fc9e3e09903975a090fb5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2640:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2654:4:28",
                "type": ""
              }
            ],
            "src": "2489:353:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2879:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2896:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2903:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2908:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2899:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2899:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2889:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2889:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2889:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2936:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2939:4:28",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2929:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2929:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2960:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2963:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2953:15:28"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "2847:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3011:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3028:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3040:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3021:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3021:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3021:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3068:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3071:4:28",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3061:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3061:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3061:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3092:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3095:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3085:15:28"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2979:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:76:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3182:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3184:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3184:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3184:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3176:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3179:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3173:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:8:28"
                  },
                  "nodeType": "YulIf",
                  "src": "3170:34:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3213:17:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3225:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3228:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3221:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3221:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3213:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3142:1:28",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3145:1:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3151:4:28",
                "type": ""
              }
            ],
            "src": "3111:125:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3289:80:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3316:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3318:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3318:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3318:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3305:1:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3312:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3308:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3308:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3302:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:13:28"
                  },
                  "nodeType": "YulIf",
                  "src": "3299:39:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3347:16:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3358:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3361:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3354:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3354:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3347:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3272:1:28",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3275:1:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3281:3:28",
                "type": ""
              }
            ],
            "src": "3241:128:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3421:88:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3452:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3454:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3454:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3454:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3437:5:28"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3448:1:28",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3444:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3444:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3434:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:17:28"
                  },
                  "nodeType": "YulIf",
                  "src": "3431:43:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:20:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3494:5:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3501:1:28",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3490:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:13:28"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3483:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3403:5:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3413:3:28",
                "type": ""
              }
            ],
            "src": "3374:135:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3546:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3563:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3570:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3566:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3566:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3556:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3556:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3603:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3606:4:28",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3596:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3596:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3627:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3630:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3620:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3620:15:28"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "3514:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3820:230:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3837:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3848:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3830:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3830:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3871:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3882:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3867:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3867:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3887:2:28",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3860:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3860:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3860:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3910:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3921:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3906:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3906:18:28"
                      },
                      {
                        "hexValue": "4f6e6c79206d6173746572206f776e65722063616e2072656e6f756e6365206f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3926:34:28",
                        "type": "",
                        "value": "Only master owner can renounce o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3899:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:62:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3899:62:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3981:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3992:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3977:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:18:28"
                      },
                      {
                        "hexValue": "776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3997:10:28",
                        "type": "",
                        "value": "wnership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3970:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3970:38:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3970:38:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4017:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4029:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4040:3:28",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4025:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4025:19:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4017:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a28793bab37f9fca99e145ce3ddfdbee35d513b90529e548582dd05190a2d8b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3797:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3811:4:28",
                "type": ""
              }
            ],
            "src": "3646:404:28"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_3279c59cf38cd2aa18997d7e259b0a569dcc09bb6c3af807880ccf7e9c7631bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Ownership renounced\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fba574a628f13337c8d554e12acf25c09c56b020b31ccfaf084049163a70a41b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not an owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_538593ea93687d235ae32a6b6b2bcda5d71efbe1a04789ce864b7aa1614f8e68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Address is not an owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7540494e9cf0c4a57a87d1b135ca545fac1796f1b67fc9e3e09903975a090fb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Master owner can't be removed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_a28793bab37f9fca99e145ce3ddfdbee35d513b90529e548582dd05190a2d8b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only master owner can renounce o\")\n        mstore(add(headStart, 96), \"wnership\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 28,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "138:293:22:-:0;;;;;;;;;;;;-1:-1:-1;482:10:25;474:71;;;;-1:-1:-1;;;474:71:25;;216:2:28;474:71:25;;;198:21:28;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:28;;;338:32;387:19;;474:71:25;;;;;;;;550:11;:24;;-1:-1:-1;;;;;;550:24:25;564:10;550:24;;;;;;;;;578:20;;;-1:-1:-1;578:20:25;;;;;;;:27;;-1:-1:-1;;578:27:25;;;;;609:9;:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;609:26:25;;;;;;138:293:22;;;;;;",
  "deployedSourceMap": "138:293:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:98;;;;;;:::i;:::-;;:::i;:::-;;1126:498:25;;;;;;:::i;:::-;;:::i;274:83:26:-;;;;;;:::i;:::-;;:::i;312:117:22:-;;;;;;:::i;:::-;;:::i;781:89:25:-;;;;;;:::i;:::-;-1:-1:-1;;;;;851:15:25;834:4;851:15;;;:8;:15;;;;;;;;;781:89;;;;748:14:28;;741:22;723:41;;711:2;696:18;781:89:25;;;;;;;;962:161;;;;;;:::i;:::-;;:::i;1627:184::-;;;:::i;873:86::-;;;:::i;:::-;;;;;;;:::i;125:20:26:-;;;;;;;;;326:21:25;;;;;;;;;211:98:22;677:9:25;;;;676:10;668:42;;;;-1:-1:-1;;;668:42:25;;;;;;;:::i;:::-;;;;;;;;;731:10;722:20;;;;:8;:20;;;;;;;;714:55;;;;-1:-1:-1;;;714:55:25;;;;;;;:::i;:::-;281:3:22::1;:24:::0;;-1:-1:-1;;;;;281:24:22;;::::1;;;-1:-1:-1::0;;;;;;281:24:22;;::::1;::::0;;;::::1;::::0;;211:98::o;1126:498:25:-;677:9;;;;676:10;668:42;;;;-1:-1:-1;;;668:42:25;;;;;;;:::i;:::-;731:10;722:20;;;;:8;:20;;;;;;;;714:55;;;;-1:-1:-1;;;714:55:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;1192:15:25;::::1;;::::0;;;:8:::1;:15;::::0;;;;;::::1;;1184:51;;;::::0;-1:-1:-1;;;1184:51:25;;2339:2:28;1184:51:25::1;::::0;::::1;2321:21:28::0;2378:2;2358:18;;;2351:30;2417:25;2397:18;;;2390:53;2460:18;;1184:51:25::1;2137:347:28::0;1184:51:25::1;1261:11;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;1261:11:25::1;1247:10;:25;;1239:67;;;::::0;-1:-1:-1;;;1239:67:25;;2691:2:28;1239:67:25::1;::::0;::::1;2673:21:28::0;2730:2;2710:18;;;2703:30;2769:31;2749:18;;;2742:59;2818:18;;1239:67:25::1;2489:353:28::0;1239:67:25::1;1316:9;1311:310;1335:9;:16:::0;1331:20;::::1;1311:310;;;1383:5;-1:-1:-1::0;;;;;1367:21:25::1;:9;1377:1;1367:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;1367:12:25::1;:21;1363:254;;;-1:-1:-1::0;;;;;1396:15:25;::::1;1414:5;1396:15:::0;;;:8:::1;:15;::::0;;;;:23;;-1:-1:-1;;1396:23:25::1;::::0;;1442:1;1425:96:::1;1449:9;:16:::0;:20:::1;::::0;1468:1:::1;::::0;1449:20:::1;:::i;:::-;1445:1;:24;1425:96;;;1498:9;1508:5;:1:::0;1512::::1;1508:5;:::i;:::-;1498:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;1483:9:::1;:12:::0;;-1:-1:-1;;;;;1498:16:25;;::::1;::::0;1493:1;;1483:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:31:::0;;-1:-1:-1;;;;;;1483:31:25::1;-1:-1:-1::0;;;;;1483:31:25;;;::::1;::::0;;;::::1;::::0;;1471:3;::::1;::::0;::::1;:::i;:::-;;;;1425:96;;;;1526:9;:15;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1526:15:25;;;;;-1:-1:-1;;;;;;1526:15:25::1;::::0;;;;;;;;1552:48:::1;::::0;1584:15:::1;::::0;-1:-1:-1;;;;;1552:48:25;::::1;::::0;1565:10:::1;::::0;1552:48:::1;::::0;::::1;1311:310;1126:498:::0;:::o;1363:254::-:1;1353:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1311:310;;;;1126:498:::0;:::o;274:83:26:-;677:9:25;;;;676:10;668:42;;;;-1:-1:-1;;;668:42:25;;;;;;;:::i;:::-;731:10;722:20;;;;:8;:20;;;;;;;;714:55;;;;-1:-1:-1;;;714:55:25;;;;;;;:::i;:::-;333:8:26::1;:20:::0;;-1:-1:-1;;333:20:26::1;::::0;::::1;;::::0;;;::::1;::::0;;274:83::o;312:117:22:-;677:9:25;;;;676:10;668:42;;;;-1:-1:-1;;;668:42:25;;;;;;;:::i;:::-;731:10;722:20;;;;:8;:20;;;;;;;;714:55;;;;-1:-1:-1;;;714:55:25;;;;;;;:::i;:::-;386:5:22::1;:39:::0;;-1:-1:-1;;;;;;386:39:22::1;-1:-1:-1::0;;;;;386:39:22;;;::::1;::::0;;;::::1;::::0;;312:117::o;962:161:25:-;677:9;;;;676:10;668:42;;;;-1:-1:-1;;;668:42:25;;;;;;;:::i;:::-;731:10;722:20;;;;:8;:20;;;;;;;;714:55;;;;-1:-1:-1;;;714:55:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;1017:15:25;::::1;;::::0;;;1035:4:::1;1017:15;::::0;;;;;;;:22;;-1:-1:-1;;1017:22:25::1;::::0;::::1;::::0;;1043:9:::1;:21:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;1043:21:25::1;::::0;::::1;::::0;;1073:46;1103:15:::1;::::0;1017;1084:10:::1;::::0;1073:46:::1;::::0;1017:15;1073:46:::1;962:161:::0;:::o;1627:184::-;1695:11;;;;;-1:-1:-1;;;;;1695:11:25;1681:10;:25;1669:88;;;;-1:-1:-1;;;1669:88:25;;3848:2:28;1669:88:25;;;3830:21:28;3887:2;3867:18;;;3860:30;3926:34;3906:18;;;3899:62;-1:-1:-1;;;3977:18:28;;;3970:38;4025:19;;1669:88:25;3646:404:28;1669:88:25;1762:9;:16;;-1:-1:-1;;1762:16:25;1774:4;1762:16;;;1787:20;;;;1762:9;1787:20;1627:184::o;873:86::-;917:16;946:9;939:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;939:16:25;;;;;;;;;;;;;;;;;;;;;;;873:86;:::o;14:286:28:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:28;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:28:o;305:273::-;361:6;414:2;402:9;393:7;389:23;385:32;382:52;;;430:1;427;420:12;382:52;469:9;456:23;522:5;515:13;508:21;501:5;498:32;488:60;;544:1;541;534:12;775:658;946:2;998:21;;;1068:13;;971:18;;;1090:22;;;917:4;;946:2;1169:15;;;;1143:2;1128:18;;;917:4;1212:195;1226:6;1223:1;1220:13;1212:195;;;1291:13;;-1:-1:-1;;;;;1287:39:28;1275:52;;1382:15;;;;1347:12;;;;1323:1;1241:9;1212:195;;;-1:-1:-1;1424:3:28;;775:658;-1:-1:-1;;;;;;775:658:28:o;1438:343::-;1640:2;1622:21;;;1679:2;1659:18;;;1652:30;-1:-1:-1;;;1713:2:28;1698:18;;1691:49;1772:2;1757:18;;1438:343::o;1786:346::-;1988:2;1970:21;;;2027:2;2007:18;;;2000:30;-1:-1:-1;;;2061:2:28;2046:18;;2039:52;2123:2;2108:18;;1786:346::o;2847:127::-;2908:10;2903:3;2899:20;2896:1;2889:31;2939:4;2936:1;2929:15;2963:4;2960:1;2953:15;2979:127;3040:10;3035:3;3031:20;3028:1;3021:31;3071:4;3068:1;3061:15;3095:4;3092:1;3085:15;3111:125;3151:4;3179:1;3176;3173:8;3170:34;;;3184:18;;:::i;:::-;-1:-1:-1;3221:9:28;;3111:125::o;3241:128::-;3281:3;3312:1;3308:6;3305:1;3302:13;3299:39;;;3318:18;;:::i;:::-;-1:-1:-1;3354:9:28;;3241:128::o;3374:135::-;3413:3;-1:-1:-1;;3434:17:28;;3431:43;;;3454:18;;:::i;:::-;-1:-1:-1;3501:1:28;3490:13;;3374:135::o;3514:127::-;3575:10;3570:3;3566:20;3563:1;3556:31;3606:4;3603:1;3596:15;3630:4;3627:1;3620:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./PauseOwners.sol\";\nimport \"./NFT.sol\";\nimport \"./Token.sol\";\n\ncontract Game is PauseOwners {\n\tNFT private nft;\n\tToken private token;\n\n\tfunction setNftAddress(address newNftAddress) external onlyOwners {\n\t\tnft = NFT(newNftAddress);\n\t}\n\n\tfunction setTokenAddress(address newTokenAddress) external onlyOwners {\n\t\ttoken = Token(payable(newTokenAddress));\n\t}\n}\n",
  "sourcePath": "C:\\Users\\sants\\Desktop\\slimekeeper\\slimekeeper_contracts\\contracts\\Game.sol",
  "ast": {
    "absolutePath": "project:/contracts/Game.sol",
    "exportedSymbols": {
      "Address": [
        2509
      ],
      "Context": [
        2531
      ],
      "Counters": [
        2605
      ],
      "ERC165": [
        2832
      ],
      "ERC20": [
        587
      ],
      "ERC721": [
        1556
      ],
      "ERC721Enumerable": [
        2028
      ],
      "ERC721URIStorage": [
        2156
      ],
      "Game": [
        4140
      ],
      "IERC165": [
        2844
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "IERC721": [
        1672
      ],
      "IERC721Enumerable": [
        2187
      ],
      "IERC721Metadata": [
        2214
      ],
      "IERC721Receiver": [
        1690
      ],
      "IUniswapV2Factory": [
        2907
      ],
      "IUniswapV2Pair": [
        3149
      ],
      "IUniswapV2Router01": [
        3457
      ],
      "IUniswapV2Router02": [
        3545
      ],
      "NFT": [
        5035
      ],
      "Owners": [
        5275
      ],
      "PauseOwners": [
        5313
      ],
      "SafeMath": [
        3620
      ],
      "Strings": [
        2808
      ],
      "Token": [
        6497
      ],
      "UniswapV2Library": [
        4095
      ]
    },
    "id": 4141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4097,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:22"
      },
      {
        "absolutePath": "project:/contracts/PauseOwners.sol",
        "file": "./PauseOwners.sol",
        "id": 4098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 5314,
        "src": "67:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFT.sol",
        "file": "./NFT.sol",
        "id": 4099,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 5036,
        "src": "95:19:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 4100,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 6498,
        "src": "115:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4101,
              "name": "PauseOwners",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5313,
              "src": "155:11:22"
            },
            "id": 4102,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:22"
          }
        ],
        "canonicalName": "Game",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4140,
        "linearizedBaseContracts": [
          4140,
          5313,
          5275
        ],
        "name": "Game",
        "nameLocation": "147:4:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4105,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "182:3:22",
            "nodeType": "VariableDeclaration",
            "scope": 4140,
            "src": "170:15:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$5035",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 4104,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4103,
                "name": "NFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5035,
                "src": "170:3:22"
              },
              "referencedDeclaration": 5035,
              "src": "170:3:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$5035",
                "typeString": "contract NFT"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4108,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "202:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 4140,
            "src": "188:19:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$6497",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 4107,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4106,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6497,
                "src": "188:5:22"
              },
              "referencedDeclaration": 6497,
              "src": "188:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$6497",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4121,
              "nodeType": "Block",
              "src": "277:32:22",
              "statements": [
                {
                  "expression": {
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4115,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4105,
                      "src": "281:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$5035",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4117,
                          "name": "newNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4110,
                          "src": "291:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4116,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5035,
                        "src": "287:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$5035_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 4118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "287:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$5035",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "281:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$5035",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 4120,
                  "nodeType": "ExpressionStatement",
                  "src": "281:24:22"
                }
              ]
            },
            "functionSelector": "0b102d1a",
            "id": 4122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4112,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5118,
                  "src": "266:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "266:10:22"
              }
            ],
            "name": "setNftAddress",
            "nameLocation": "220:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "newNftAddress",
                  "nameLocation": "242:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "234:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:23:22"
            },
            "returnParameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:22"
            },
            "scope": 4140,
            "src": "211:98:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4138,
              "nodeType": "Block",
              "src": "382:47:22",
              "statements": [
                {
                  "expression": {
                    "id": 4136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4129,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4108,
                      "src": "386:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$6497",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4133,
                              "name": "newTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4124,
                              "src": "408:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "400:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 4131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "400:8:22",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "400:24:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4130,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "394:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$6497_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 4135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$6497",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "386:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$6497",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 4137,
                  "nodeType": "ExpressionStatement",
                  "src": "386:39:22"
                }
              ]
            },
            "functionSelector": "26a4e8d2",
            "id": 4139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4126,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5118,
                  "src": "371:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "371:10:22"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "321:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4124,
                  "mutability": "mutable",
                  "name": "newTokenAddress",
                  "nameLocation": "345:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4139,
                  "src": "337:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:22"
            },
            "returnParameters": {
              "id": 4128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:22"
            },
            "scope": 4140,
            "src": "312:117:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4141,
        "src": "138:293:22",
        "usedErrors": []
      }
    ],
    "src": "33:399:22"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Game.sol",
    "exportedSymbols": {
      "Address": [
        2509
      ],
      "Context": [
        2531
      ],
      "Counters": [
        2605
      ],
      "ERC165": [
        2832
      ],
      "ERC20": [
        587
      ],
      "ERC721": [
        1556
      ],
      "ERC721Enumerable": [
        2028
      ],
      "ERC721URIStorage": [
        2156
      ],
      "Game": [
        4140
      ],
      "IERC165": [
        2844
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "IERC721": [
        1672
      ],
      "IERC721Enumerable": [
        2187
      ],
      "IERC721Metadata": [
        2214
      ],
      "IERC721Receiver": [
        1690
      ],
      "IUniswapV2Factory": [
        2907
      ],
      "IUniswapV2Pair": [
        3149
      ],
      "IUniswapV2Router01": [
        3457
      ],
      "IUniswapV2Router02": [
        3545
      ],
      "NFT": [
        5035
      ],
      "Owners": [
        5275
      ],
      "PauseOwners": [
        5313
      ],
      "SafeMath": [
        3620
      ],
      "Strings": [
        2808
      ],
      "Token": [
        6497
      ],
      "UniswapV2Library": [
        4095
      ]
    },
    "id": 4141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4097,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:22"
      },
      {
        "absolutePath": "project:/contracts/PauseOwners.sol",
        "file": "./PauseOwners.sol",
        "id": 4098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 5314,
        "src": "67:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFT.sol",
        "file": "./NFT.sol",
        "id": 4099,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 5036,
        "src": "95:19:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 4100,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4141,
        "sourceUnit": 6498,
        "src": "115:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4101,
              "name": "PauseOwners",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5313,
              "src": "155:11:22"
            },
            "id": 4102,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:22"
          }
        ],
        "canonicalName": "Game",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4140,
        "linearizedBaseContracts": [
          4140,
          5313,
          5275
        ],
        "name": "Game",
        "nameLocation": "147:4:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4105,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "182:3:22",
            "nodeType": "VariableDeclaration",
            "scope": 4140,
            "src": "170:15:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$5035",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 4104,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4103,
                "name": "NFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5035,
                "src": "170:3:22"
              },
              "referencedDeclaration": 5035,
              "src": "170:3:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$5035",
                "typeString": "contract NFT"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4108,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "202:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 4140,
            "src": "188:19:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$6497",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 4107,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4106,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6497,
                "src": "188:5:22"
              },
              "referencedDeclaration": 6497,
              "src": "188:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$6497",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4121,
              "nodeType": "Block",
              "src": "277:32:22",
              "statements": [
                {
                  "expression": {
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4115,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4105,
                      "src": "281:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$5035",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4117,
                          "name": "newNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4110,
                          "src": "291:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4116,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5035,
                        "src": "287:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$5035_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 4118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "287:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$5035",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "281:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$5035",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 4120,
                  "nodeType": "ExpressionStatement",
                  "src": "281:24:22"
                }
              ]
            },
            "functionSelector": "0b102d1a",
            "id": 4122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4112,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5118,
                  "src": "266:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "266:10:22"
              }
            ],
            "name": "setNftAddress",
            "nameLocation": "220:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "newNftAddress",
                  "nameLocation": "242:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "234:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:23:22"
            },
            "returnParameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:22"
            },
            "scope": 4140,
            "src": "211:98:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4138,
              "nodeType": "Block",
              "src": "382:47:22",
              "statements": [
                {
                  "expression": {
                    "id": 4136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4129,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4108,
                      "src": "386:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$6497",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4133,
                              "name": "newTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4124,
                              "src": "408:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "400:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 4131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "400:8:22",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "400:24:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4130,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "394:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$6497_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 4135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$6497",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "386:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$6497",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 4137,
                  "nodeType": "ExpressionStatement",
                  "src": "386:39:22"
                }
              ]
            },
            "functionSelector": "26a4e8d2",
            "id": 4139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4126,
                  "name": "onlyOwners",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5118,
                  "src": "371:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "371:10:22"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "321:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4124,
                  "mutability": "mutable",
                  "name": "newTokenAddress",
                  "nameLocation": "345:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4139,
                  "src": "337:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:25:22"
            },
            "returnParameters": {
              "id": 4128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:22"
            },
            "scope": 4140,
            "src": "312:117:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4141,
        "src": "138:293:22",
        "usedErrors": []
      }
    ],
    "src": "33:399:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0xd0fF2f27F042df9985Cb3AA0d3FeB0B336eB769b",
      "transactionHash": "0xce6d327943368d998e76255d96fc9c64ca66b7b85a6d04e9bd164fd37727f485"
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0x85e34Dc9D98c67Fe2b69E44A2523d1416649CD65",
      "transactionHash": "0xaf2a0b549aab321dc111e20c0c8e802d19be3b678bb2aa64a86b5700f4bfa571"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9e7568a11Cb6AAA35954daDD99bdD43c2F268058",
      "transactionHash": "0xce215aa5b74f771f38855827a061a4f4afcc1631aca60036ec4e1fbc9cdf6b52"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-23T00:12:46.486Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}